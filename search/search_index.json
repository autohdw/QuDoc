{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Overview","text":"<p><code>QuBLAS</code> is pronounced as  [t\u0255\u02b0y.bl\u0251:s]</p> <p>This library provides simulation capabilities for fixed-point arithmetic operations in C++, tailored for behavioral modeling and accuracy testing of algorithms in a hardware context.</p> <p><code>QuBLAS</code> is designed to mimic the behavior of fixed-point arithmetic as closely as possible to what one would expect when running an algorithm on actual hardware such as ASICs or FPGAs. The library supports various quantization modes and overflow handling schemes, allowing users to simulate and explore different numerical and structural scenarios for their designs.</p>"},{"location":"APIs/Qu_creation/","title":"Qu\u7684\u521b\u5efa","text":"<p><code>Qu</code>\u4e3a\u4e00\u5207\u6807\u91cf\u3001\u5411\u91cf\u3001\u77e9\u9635\u4e43\u81f3\u5f20\u91cf\u7684\u521b\u5efa\u5165\u53e3\u3002</p> <p>\u6240\u6709\u7684<code>Qu</code>\u5bf9\u8c61\u90fd\u901a\u8fc7 <code>Qu&lt;T...&gt;</code> \u7684\u5f62\u5f0f\u6765\u521b\u5efa\uff0c\u5176\u4e2d<code>T...</code>\u4e3a\u4efb\u610f\u6570\u91cf\u7684\u914d\u7f6e\u6807\u7b7e\u3002</p> \u5b9e\u6570\u6807\u91cf\u590d\u6570\u6807\u91cf\u5f20\u91cf <p>\u53ef\u9009\u6807\u7b7e\u5305\u62ec\uff1a    </p> \u6807\u7b7e \u53ef\u9009\u503c \u63cf\u8ff0 <code>intBits&lt;&gt;</code> <code>size_t</code> \u6574\u6570\u4f4d\u5bbd\uff0c\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff0c\u672a\u6307\u5b9a\u65f6\u4e3a8 <code>fracBits&lt;&gt;</code> <code>size_t</code> \u5c0f\u6570\u4f4d\u5bbd\uff0c\u53ef\u4ee5\u4e3a\u8d1f\u6570\uff0c\u672a\u6307\u5b9a\u65f6\u4e3a8 <code>isSigned&lt;&gt;</code> <code>bool</code> \u662f\u5426\u6709\u7b26\u53f7\uff0c\u672a\u6307\u5b9a\u65f6\u4e3aTrue <code>QuMode&lt;&gt;</code> <code>enum</code> \u91cf\u5316\u6a21\u5f0f\uff0c\u6709\u5f85\u8865\u5145 <code>OfMode&lt;&gt;</code> <code>enum</code> \u6ea2\u51fa\u6a21\u5f0f\uff0c\u6709\u5f85\u8865\u5145 <p>Warning</p> <ul> <li><code>intBits</code>\u548c<code>fracBits</code>\u7684\u548c\u5fc5\u987b\u5c0f\u4e8e\u7b49\u4e8e31\u3002\u66f4\u9ad8\u7684\u4f4d\u5bbd\u5c1a\u672a\u5b9e\u73b0\u3002</li> </ul> <p>Example</p> \u76f4\u63a5\u521b\u5efa\u95f4\u63a5\u521b\u5efa <pre><code>Qu&lt;intBits&lt;8&gt;, isSigned&lt;true&gt;&gt; a = 1;     \nQu&lt;fracBits&lt;8&gt;&gt; b = 0.5;\n</code></pre> <pre><code>using QuType = Qu&lt;intBits&lt;8&gt;, isSigned&lt;true&gt;&gt;;\nQuType a = 1;\n</code></pre> <p>\u9700\u8981\u4f20\u5165\u4e24\u4e2a\u5b9e\u6570\u6807\u91cf\u7c7b\u578b\uff0c\u5f62\u5982<code>Qu&lt;Qu&lt;T1...&gt;, Qu&lt;T2...&gt;&gt;</code>\u3002</p> <p>Example</p> \u76f4\u63a5\u521b\u5efa\u95f4\u63a5\u521b\u5efa <pre><code>Qu&lt;Qu&lt;intBits&lt;8&gt;, isSigned&lt;true&gt;&gt;, Qu&lt;fracBits&lt;8&gt;&gt;&gt; a = {1, 0.5};\n</code></pre> <pre><code>using QuType1 = Qu&lt;intBits&lt;8&gt;, isSigned&lt;true&gt;&gt;;\nusing QuType2 = Qu&lt;fracBits&lt;8&gt;&gt;;\nQu&lt;QuType1, QuType2&gt; a = {1, 0.5};\n</code></pre> <p>\u6240\u6709\u975e\u6807\u91cf\u7684<code>Qu</code>\u5bf9\u8c61\u90fd\u662f\u5f20\u91cf\u3002</p> <p>\u5f20\u91cf\u7684\u521b\u5efa\u683c\u5f0f\u4e3a<code>Qu&lt;dim&lt;N...&gt;, T...&gt;</code>\uff0c\u5176\u4e2d<code>dim&lt;N...&gt;</code>\u4e3a\u5f20\u91cf\u7684\u7ef4\u5ea6\uff0c<code>N...</code>\u4e3a\u4efb\u610f\u6570\u91cf\u7684\u7ef4\u5ea6\u3002 </p> <p>Info</p> <ul> <li><code>dim&lt;N...&gt;</code> \u5fc5\u987b\u4e3a\u7b2c\u4e00\u4e2a\u914d\u7f6e\u6807\u7b7e\u3002</li> <li>\u5217\u4f18\u5148\u5b58\u50a8\u3002 (1)     </li> <li><code>T...</code> \u90e8\u5206\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165\u7528\u4e8e\u914d\u7f6e\u6807\u91cf\u7684\u6807\u7b7e\uff0c\u4e5f\u53ef\u4ee5\u4f20\u5165\u5df2\u7ecf\u521b\u5efa\u597d\u7684<code>Qu</code>\u7c7b\u578b\u3002</li> </ul> <ol> <li>\u5982\u679c\u4f60\u4e0d\u4e86\u89e3\u5217\u4f18\u5148\u5b58\u50a8\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u548cMatlab\u4e00\u6837\u3002</li> </ol> <p>Example</p> \u76f4\u63a5\u521b\u5efa\u95f4\u63a5\u521b\u5efa <pre><code>Qu&lt;dim&lt;2, 3&gt;, intBits&lt;8&gt;, isSigned&lt;true&gt;&gt; a = {1, 2, 3, 4, 5, 6};\n</code></pre> <pre><code>using QuType = Qu&lt;intBits&lt;8&gt;, isSigned&lt;true&gt;&gt;;\nusing MatType = Qu&lt;dim&lt;2, 3&gt;, QuType&gt;;\nMatType a = {1, 2, 3, 4, 5, 6};\n</code></pre>"},{"location":"APIs/Qu_operation/","title":"Qu\u7684\u8fd0\u7b97","text":""},{"location":"APIs/Qu_operation/#qaddtqu-qu-qmultqu-qu-qsubtqu-qu-qdivtqu-qu","title":"<code>Qadd&lt;T...&gt;(Qu, Qu)</code>  <code>Qmul&lt;T...&gt;(Qu, Qu)</code>  <code>Qsub&lt;T...&gt;(Qu, Qu)</code>  <code>Qdiv&lt;T...&gt;(Qu, Qu)</code>","text":"<p>Qu</p> <p>\u57fa\u7840\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97\u3002\u8f93\u5165\u53c2\u6570\u4e3a\u4e24\u4e2aQu\u3002</p> <p>\u8fd9\u91cc\u7684Qu\u53ef\u4ee5\u662f\u4efb\u4f55Qu\u7c7b\u578b\uff0c\u6807\u91cf\u3001\u5f20\u91cf\u3001\u590d\u6570\u7b49\u90fd\u53ef\u4ee5\u3002</p> <p><code>T...</code>\u6307\u7684\u662f\u4e00\u7cfb\u5217\u7684tag\uff0c\u7528\u4e8e\u914d\u7f6e\u8fd9\u4e2a\u8fd0\u7b97\u7684\u4e00\u4e9b\u7279\u6b8a\u6027\u8d28\u3002\u5177\u4f53\u7684tag\u89c1\u5404\u81ea\u7684\u4ecb\u7ecd\u3002</p>"},{"location":"APIs/Qu_operation/#qaddtqu-qu","title":"<code>Qadd&lt;T...&gt;(Qu, Qu)</code>","text":"<p>Qu</p> <p>\u52a0\u6cd5\u3002</p> \u5b9e\u6570\u590d\u6570\u5f20\u91cf <ul> <li>\u5141\u8bb8\u7684tag\u914d\u7f6e\u683c\u5f0f\u5305\u62ec\uff1a<ol> <li>\u4f20\u5165\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b</li> <li>\u4f20\u5165\u4efb\u610f\u6570\u91cf\u7684\u57fa\u7840tag\u5982<code>intBits&lt;&gt;</code>\u3001<code>fracBits&lt;&gt;</code>\u7b49\uff0c\u4e0d\u8db3\u65f6\u4f1a\u81ea\u52a8\u63a8\u5bfc</li> </ol> </li> </ul> <p>Example</p> <pre><code>using type1 = Qu&lt;&gt;;\nusing type2 = Qu&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;;\n\ntype1 a = 0.5;\ntype2 b = 0.5;\n\nauto c = Qadd(a, b);                           // \u5168\u90e8\u81ea\u52a8\u63a8\u5bfc\nauto d = Qadd&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;(a, b);  // \u4ec5\u4f7f\u7528\u57fa\u7840tag\nauto e = Qadd&lt;type1&gt;(a, b);                    // \u4f7f\u7528\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b\n</code></pre> <ul> <li>\u5141\u8bb8\u7684tag\u914d\u7f6e\u683c\u5f0f\u5305\u62ec\uff1a<ul> <li>\u4f20\u5165\u4efb\u610f\u6570\u91cf\u7684\u57fa\u7840tag\u5982<code>intBits</code>\u3001<code>fracBits</code>\u7b49\uff0c\u4e0d\u8db3\u65f6\u4f1a\u81ea\u52a8\u63a8\u5bfc\uff0c\u5c06\u540c\u65f6\u7528\u4e8e\u5b9e\u90e8\u548c\u865a\u90e8</li> <li>\u4f20\u5165\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b\uff0c\u5c06\u540c\u65f6\u7528\u4e8e\u5b9e\u90e8\u548c\u865a\u90e8</li> <li>\u8fde\u7eed\u4f20\u5165\u4e24\u4e2a\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b\uff0c\u7b2c\u4e00\u4e2a\u7528\u4e8e\u5b9e\u90e8\uff0c\u7b2c\u4e8c\u4e2a\u7528\u4e8e\u865a\u90e8</li> <li>\u4f7f\u7528<code>realT&lt;&gt;</code>\u548c<code>imagT&lt;&gt;</code>\u8fdb\u884c\u5b9e\u90e8\u548c\u865a\u90e8\u7684\u914d\u7f6e\u3002\u88ab\u5305\u88f9\u5728<code>realT&lt;&gt;</code>\u548c<code>imagT&lt;&gt;</code>\u4e2d\u7684tag\u5c06\u4f1a\u88ab\u7528\u4e8e\u5bf9\u5e94\u7684\u90e8\u5206\u3002</li> </ul> </li> </ul> <p>Example</p> <pre><code>using type1 = Qu&lt;&gt;;\nusing type2 = Qu&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;;\nusing complex_t = Qu&lt;type1, type2&gt;;\n\ncomplex_t a = {0.5, 0.5};\ntype1 b = 0.5;\ncomplex_t c = {0.5, 0.5};\n\nauto d = Qadd(a, b);                                 // \u5b9e\u90e8\u865a\u90e8\u90fd\u81ea\u52a8\u63a8\u5bfc\nauto e = Qadd&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;(a, c);        // \u5b9e\u90e8\u865a\u90e8\u90fd\u4f7f\u7528intBits&lt;3&gt;, fracBits&lt;4&gt;\nauto f = Qadd&lt;type1&gt;(a, c);                          // \u5b9e\u90e8\u865a\u90e8\u90fd\u4f7f\u7528type1\nauto g = Qadd&lt;type1, type2&gt;(a, c);                   // \u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u4f7f\u7528type2\nauto h = Qadd&lt;realT&lt;type1&gt;, imagT&lt;type2&gt;&gt;(a, c);     // \u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u4f7f\u7528type2\nauto i = Qadd&lt;realT&lt;type1&gt;&gt;(a, c);                   // \u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u81ea\u52a8\u63a8\u5bfc\nauto j = Qadd&lt;imagT&lt;fracBits&lt;5&gt;&gt;&gt;(a, c);             // \u5b9e\u90e8\u81ea\u52a8\u63a8\u5bfc\uff0c\u865a\u90e8\u4f7f\u7528fracBits&lt;5&gt;\uff0c\u5176\u4f59\u81ea\u52a8\u63a8\u5bfc\n</code></pre> <p>\u5f53\u8f93\u5165\u4efb\u610f\u4e00\u4e2a\u8f93\u5165\u4e3a\u5f20\u91cf\u65f6\uff0c\u5c06\u4f1a\u6267\u884c\u9010\u5143\u7d20\u52a0\u6cd5\u3002\u6b64\u65f6\u4f20\u5165\u7684\u4efb\u610ftag\u5c06\u4f1a\u88ab\u5e7f\u64ad\u5230\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u52a0\u6cd5\u4e2d\u3002</p> <p>\u5141\u8bb8\u8f93\u5165\u60c5\u51b5\u4e3a\u4e24\u4e2a\u5c3a\u5bf8\u76f8\u540c\u7684\u5f20\u91cf\uff0c\u6216\u8005\u4e00\u4e2a\u6807\u91cf\u548c\u4e00\u4e2a\u5f20\u91cf\u3002</p> <p>Warning</p> <p>\u4e0d\u652f\u6301\u4e0d\u540c\u5c3a\u5bf8\u7684\u5f20\u91cf\u8fdb\u884c\u8ba1\u7b97\u3002\u5b8c\u6574\u7684\u5e7f\u64ad\u529f\u80fd\u6709\u5f85\u5b9e\u73b0\u3002</p> <p>Example</p> <pre><code>using type1 = Qu&lt;&gt;;\nusing type2 = Qu&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;;\nusing complex_t = Qu&lt;type1, type2&gt;;\nusing vec_t = Qu&lt;dim&lt;3&gt;, complex_t&gt;;\n\nvec_t a = {0.5, 0.5, 0.5};\ntype1 b = 0.5;\nvec_t c;\nc.fill();\n\nauto d = Qadd&lt;type1&gt; (a, b);            // \u5e7f\u64adb\u5230a\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\nauto e = Qadd&lt;realT&lt;type1&gt;&gt;(a, b);      // a\u548cc\u8fdb\u884c\u9010\u5143\u7d20\u52a0\u6cd5\uff0c\u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u81ea\u52a8\u63a8\u5bfc\n</code></pre>"},{"location":"APIs/Qu_operation/#qmultqu-qu","title":"<code>Qmul&lt;T...&gt;(Qu, Qu)</code>","text":"<p>Qu</p> <p>\u4e58\u6cd5\u3002</p> \u5b9e\u6570 - \u5b9e\u6570\u5b9e\u6570 - \u590d\u6570\u590d\u6570 - \u590d\u6570\u5f20\u91cf <ul> <li>\u5141\u8bb8\u7684tag\u914d\u7f6e\u683c\u5f0f\u5305\u62ec\uff1a<ol> <li>\u4f20\u5165\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b</li> <li>\u4f20\u5165\u4efb\u610f\u6570\u91cf\u7684\u57fa\u7840tag\u5982<code>intBits&lt;&gt;</code>\u3001<code>fracBits&lt;&gt;</code>\u7b49\uff0c\u4e0d\u8db3\u65f6\u4f1a\u81ea\u52a8\u63a8\u5bfc</li> </ol> </li> </ul> <p>Example</p> <pre><code>using type1 = Qu&lt;&gt;;\nusing type2 = Qu&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;;\n\ntype1 a = 0.5;\ntype2 b = 0.5;\n\nauto c = Qmul(a, b);                           // \u5168\u90e8\u81ea\u52a8\u63a8\u5bfc\nauto d = Qmul&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;(a, b);  // \u4ec5\u4f7f\u7528\u57fa\u7840tag\nauto e = Qmul&lt;type1&gt;(a, b);                    // \u4f7f\u7528\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b\n</code></pre> <ul> <li>\u5141\u8bb8\u7684tag\u914d\u7f6e\u683c\u5f0f\u5305\u62ec\uff1a<ul> <li>\u4f20\u5165\u4efb\u610f\u6570\u91cf\u7684\u57fa\u7840tag\u5982<code>intBits&lt;&gt;</code>\u3001<code>fracBits&lt;&gt;</code>\u7b49\uff0c\u4e0d\u8db3\u65f6\u4f1a\u81ea\u52a8\u63a8\u5bfc\uff0c\u5c06\u540c\u65f6\u7528\u4e8e\u5b9e\u90e8\u548c\u865a\u90e8</li> <li>\u4f20\u5165\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b\uff0c\u5c06\u540c\u65f6\u7528\u4e8e\u5b9e\u90e8\u548c\u865a\u90e8</li> <li>\u8fde\u7eed\u4f20\u5165\u4e24\u4e2a\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b\uff0c\u7b2c\u4e00\u4e2a\u7528\u4e8e\u5b9e\u90e8\uff0c\u7b2c\u4e8c\u4e2a\u7528\u4e8e\u865a\u90e8</li> <li>\u4f7f\u7528<code>realT&lt;&gt;</code>\u548c<code>imagT&lt;&gt;</code>\u8fdb\u884c\u5b9e\u90e8\u548c\u865a\u90e8\u7684\u914d\u7f6e\u3002\u88ab\u5305\u88f9\u5728<code>realT&lt;&gt;</code>\u548c<code>imagT&lt;&gt;</code>\u4e2d\u7684tag\u5c06\u4f1a\u88ab\u7528\u4e8e\u5bf9\u5e94\u7684\u90e8\u5206\u3002</li> </ul> </li> </ul> <p>Example</p> <pre><code>using type1 = Qu&lt;&gt;;\nusing type2 = Qu&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;;\nusing complex_t = Qu&lt;type1, type2&gt;;\n\ncomplex_t a = {0.5, 0.5};\ntype1 b = 0.5;\ncomplex_t c = {0.5, 0.5};\n\nauto d = Qmul(a, b);                                 // \u5b9e\u90e8\u865a\u90e8\u90fd\u81ea\u52a8\u63a8\u5bfc\nauto e = Qmul&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;(a, c);        // \u5b9e\u90e8\u865a\u90e8\u90fd\u4f7f\u7528intBits&lt;3&gt;, fracBits&lt;4&gt;\nauto f = Qmul&lt;type1&gt;(a, c);                          // \u5b9e\u90e8\u865a\u90e8\u90fd\u4f7f\u7528type1\nauto g = Qmul&lt;type1, type2&gt;(a, c);                   // \u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u4f7f\u7528type2\nauto h = Qmul&lt;realT&lt;type1&gt;, imagT&lt;type2&gt;&gt;(a, c);     // \u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u4f7f\u7528type2\nauto i = Qmul&lt;realT&lt;type1&gt;&gt;(a, c);                   // \u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u81ea\u52a8\u63a8\u5bfc\nauto j = Qmul&lt;imagT&lt;fracBits&lt;5&gt;&gt;&gt;(a, c);             // \u5b9e\u90e8\u81ea\u52a8\u63a8\u5bfc\uff0c\u865a\u90e8\u4f7f\u7528fracBits&lt;5&gt;\uff0c\u5176\u4f59\u81ea\u52a8\u63a8\u5bfc\n</code></pre> <p>\u590d\u6570 - \u590d\u6570\u7684\u4e58\u6cd5\u6709\u4e24\u79cd\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5206\u522b\u4e3a\u57fa\u7840\u4e58\u6cd5\u548cTF\u4e58\u6cd5\u3002\u9700\u8981\u7528\u5404\u81ea\u7684tag\u8fdb\u884c\u914d\u7f6e\u3002</p> \u57fa\u7840\u4e58\u6cd5TF\u4e58\u6cd5 <p>\u4e5f\u5c31\u662f\u6807\u51c6\u7684\u9700\u89814\u6b21\u4e58\u6cd5\u548c2\u6b21\u52a0\u6cd5\u7684\u8ba1\u7b97\u3002</p> <pre><code>x = a + bi, y = c + di\n\nxy = (ac - bd) + (ad + bc)i\n</code></pre> <ul> <li>\u9700\u8981\u4f7f\u7528\u6807\u7b7e<code>BasicComplexMul&lt;&gt;</code>\u8fdb\u884c\u914d\u7f6e\u3002\u5141\u8bb8\u4f20\u51656\u4e2a\u6807\u7b7e,\u5177\u4f53\u7684\u914d\u7f6e\u5982\u4e0b\uff1a<ul> <li><code>acT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97ac\u7684\u4e58\u6cd5\u3002</li> <li><code>bdT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97bd\u7684\u4e58\u6cd5\u3002</li> <li><code>adT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97ad\u7684\u4e58\u6cd5\u3002</li> <li><code>bcT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97bc\u7684\u4e58\u6cd5\u3002</li> <li><code>acbdT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97ac - bd\u7684\u51cf\u6cd5\u3002</li> <li><code>adbcT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97ad + bc\u7684\u52a0\u6cd5\u3002</li> </ul> </li> <li>\u53ef\u4ee5\u76f4\u63a5\u5728<code>BasicComplexMul&lt;&gt;</code>\u5185\u90e8\u4f20\u5165\u4e00\u4e2aQu\u7c7b\u578b\uff0c\u6216\u8005\u4efb\u610f\u6570\u91cf\u7684\u57fa\u7840tag\u3002\u6b64\u65f6\u8fd9\u4e9btag\u5c06\u4f1a\u88ab\u7528\u4e8e\u6240\u6709\u7684\u8ba1\u7b97\u3002</li> </ul> <p>Example</p> <pre><code>Qu&lt;Qu&lt;&gt;, Qu&lt;&gt;&gt; a = {1, 2};\nQu&lt;Qu&lt;&gt;, Qu&lt;&gt;&gt; b = {3, 4};\n\nusing type = Qu&lt;&gt;;\n\nauto c = Qmul&lt;\n            BasicComplexMul&lt;\n                acT&lt;type&gt;,                       // \u4f7f\u7528\u5b9a\u4e49\u597d\u7684\u7c7b\u578b\u8fdb\u884c\u914d\u7f6e\n                bdT&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;,    // \u4f7f\u7528\u57fa\u7840tag\u76f4\u63a5\u914d\u7f6e\n                // adT&lt;type&gt;,                    // \u4e0d\u8fdb\u884c\u914d\u7f6e\uff0cad\u4e58\u6cd5\u5c06\u81ea\u52a8\u63a8\u5bfc\n                bcT&lt;type&gt;,\n                acbdT&lt;type&gt;,\n                adbcT&lt;type&gt;\n                &gt;\n            &gt;(a, b);\n\nauto d = Qmul&lt;\n            BasicComplexMul&lt;type&gt;               // type\u5c06\u4f1a\u7528\u4e8e\u5168\u90e84\u6b21\u4e58\u6cd5\u548c2\u6b21\u52a0\u6cd5\n            &gt;(a, b);\n\nauto e = Qmul&lt;\n            BasicComplexMul&lt;\n                intBits&lt;3&gt;, fracBits&lt;4&gt;         // \u8fd9\u91cc\u7684tag\u5c06\u4f1a\u7528\u4e8e\u5168\u90e84\u6b21\u4e58\u6cd5\u548c2\u6b21\u52a0\u6cd5\n                &gt;\n            &gt;(a, b);\n</code></pre> <p>\u4e00\u79cd\u4f7f\u75283\u6b21\u4e58\u6cd5\u548c5\u6b21\u52a0\u6cd5\u7684\u4e58\u6cd5\u8ba1\u7b97\u3002</p> <pre><code>x = a + bi, y = c + di\n\nA = (a + b)c, B = (c + d)b, C = (b \u2212 a)d\n\nxy = (A \u2212 B) + (B \u2212 C)i\n</code></pre> <ul> <li>\u4f7f\u7528\u6807\u7b7e<code>TFComplexMu&lt;&gt;</code>\u8fdb\u884c\u914d\u7f6e\u3002\u5141\u8bb8\u4f20\u51658\u4e2a\u6807\u7b7e\uff0c\u5206\u522b\u5bf9\u5e94:<ul> <li><code>abT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97a + b\u7684\u4e58\u6cd5\u3002</li> <li><code>cdT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97c + d\u7684\u4e58\u6cd5\u3002</li> <li><code>baT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97b - a\u7684\u51cf\u6cd5\u3002</li> <li><code>abcT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97(a + b)c\u7684\u4e58\u6cd5\u3002</li> <li><code>cdbT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97(c + d)b\u7684\u4e58\u6cd5\u3002</li> <li><code>badT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97(b \u2212 a)d\u7684\u4e58\u6cd5\u3002</li> <li><code>ABT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97A - B\u7684\u51cf\u6cd5\u3002</li> <li><code>BCT&lt;&gt;</code>\uff1a\u4f20\u5165\u7684\u6240\u6709tag\u5c06\u4f1a\u7528\u4e8e\u8ba1\u7b97B - C\u7684\u51cf\u6cd5\u3002</li> </ul> </li> <li>\u53ef\u4ee5\u76f4\u63a5\u5728<code>TFComplexMul&lt;&gt;</code>\u5185\u90e8\u4f20\u5165\u4e00\u4e2aQu\u7c7b\u578b\uff0c\u6216\u8005\u4efb\u610f\u6570\u91cf\u7684\u57fa\u7840tag\u3002\u6b64\u65f6\u8fd9\u4e9btag\u5c06\u4f1a\u88ab\u7528\u4e8e\u6240\u6709\u7684\u8ba1\u7b97\u3002</li> </ul> <p>Example</p> <pre><code>Qu&lt;Qu&lt;&gt;, Qu&lt;&gt;&gt; a = {1, 2};\nQu&lt;Qu&lt;&gt;, Qu&lt;&gt;&gt; b = {3, 4};\n\nusing type = Qu&lt;&gt;;\n\nauto c = Qmul&lt;\n            TFComplexMul&lt;\n                abT&lt;type&gt; ,                      // \u4f7f\u7528\u5b9a\u4e49\u597d\u7684\u7c7b\u578b\u8fdb\u884c\u914d\u7f6e\n                cdT&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;,    // \u4f7f\u7528\u57fa\u7840tag\u76f4\u63a5\u914d\u7f6e\n                // baT&lt;type&gt;,                    // \u4e0d\u8fdb\u884c\u914d\u7f6e\uff0cba\u51cf\u6cd5\u5c06\u81ea\u52a8\u63a8\u5bfc\n                abcT&lt;type&gt;,\n                cdbT&lt;type&gt;,\n                badT&lt;type&gt;,\n                ABT&lt;type&gt;,\n                BCT&lt;type&gt;\n                &gt;\n            &gt;(a, b);\n\nauto d = Qmul&lt;\n            TFComplexMul&lt;type&gt;                 // type\u5c06\u4f1a\u7528\u4e8e\u5168\u90e83\u6b21\u4e58\u6cd5\u548c5\u6b21\u52a0\u6cd5\n            &gt;(a, b);\n\nauto e = Qmul&lt;\n            TFComplexMul&lt;\n                intBits&lt;3&gt;, fracBits&lt;4&gt;         // \u8fd9\u91cc\u7684tag\u5c06\u4f1a\u7528\u4e8e\u5168\u90e83\u6b21\u4e58\u6cd5\u548c5\u6b21\u52a0\u6cd5\n                &gt;\n            &gt;(a, b);\n</code></pre> <p>\u5f53\u8f93\u5165\u4efb\u610f\u4e00\u4e2a\u8f93\u5165\u4e3a\u5f20\u91cf\u65f6\uff0c\u5c06\u4f1a\u6267\u884c\u9010\u5143\u7d20\u4e58\u6cd5\u3002\u6b64\u65f6\u4f20\u5165\u7684\u4efb\u610ftag\u5c06\u4f1a\u88ab\u5e7f\u64ad\u5230\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u4e58\u6cd5\u4e2d\u3002</p> <p>\u5141\u8bb8\u8f93\u5165\u60c5\u51b5\u4e3a\u4e24\u4e2a\u5c3a\u5bf8\u76f8\u540c\u7684\u5f20\u91cf\uff0c\u6216\u8005\u4e00\u4e2a\u6807\u91cf\u548c\u4e00\u4e2a\u5f20\u91cf\u3002</p> <p>Warning</p> <p>\u4e0d\u652f\u6301\u4e0d\u540c\u5c3a\u5bf8\u7684\u5f20\u91cf\u8fdb\u884c\u8ba1\u7b97\u3002\u5b8c\u6574\u7684\u5e7f\u64ad\u529f\u80fd\u6709\u5f85\u5b9e\u73b0\u3002</p> <p>Example</p> <pre><code>using type1 = Qu&lt;&gt;;\nusing type2 = Qu&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;;\nusing complex_t = Qu&lt;type1, type2&gt;;\nusing vec_t = Qu&lt;dim&lt;3&gt;, complex_t&gt;;\n\nvec_t a = {0.5, 0.5, 0.5};\ntype1 b = 0.5;\nvec_t c;\nc.fill();\n\nauto d = Qmul&lt;type1&gt; (a, b);                        // \u5e7f\u64adb\u5230a\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\nauto e = Qmul&lt;realT&lt;type1&gt;&gt;(a, b);                  // a\u548cc\u8fdb\u884c\u9010\u5143\u7d20\u4e58\u6cd5\uff0c\u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u81ea\u52a8\u63a8\u5bfc\nauto f = Qmul&lt;realT&lt;type1&gt;, imagT&lt;type2&gt;&gt;(a, c);    // a\u548cc\u8fdb\u884c\u9010\u5143\u7d20\u4e58\u6cd5\uff0c\u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u4f7f\u7528type2\nauto g = Qmul&lt;\n            BasicComplexMul&lt;\n                acT&lt;type1&gt;, bdT&lt;type2&gt;, adT&lt;type1&gt;, bcT&lt;type2&gt;, acbdT&lt;type1&gt;, adbcT&lt;type1&gt;\n                &gt;\n            &gt;(c, c);                                // c\u548cc\u8fdb\u884c\u9010\u5143\u7d20\u4e58\u6cd5\uff0c\u4f7f\u7528BasicComplexMul\u8fdb\u884c\u914d\u7f6e\n</code></pre>"},{"location":"APIs/Qu_operation/#qsubtqu-qu","title":"<code>Qsub&lt;T...&gt;(Qu, Qu)</code>","text":"<p>Qu</p> <p>\u51cf\u6cd5\u3002</p> \u5b9e\u6570\u590d\u6570\u5f20\u91cf <ul> <li>\u5141\u8bb8\u7684tag\u914d\u7f6e\u683c\u5f0f\u5305\u62ec\uff1a<ol> <li>\u4f20\u5165\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b</li> <li>\u4f20\u5165\u4efb\u610f\u6570\u91cf\u7684\u57fa\u7840tag\u5982<code>intBits&lt;&gt;</code>\u3001<code>fracBits&lt;&gt;</code>\u7b49\uff0c\u4e0d\u8db3\u65f6\u4f1a\u81ea\u52a8\u63a8\u5bfc</li> </ol> </li> </ul> <p>Example</p> <pre><code>using type1 = Qu&lt;&gt;;\nusing type2 = Qu&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;;\n\ntype1 a = 0.5;\ntype2 b = 0.5;\n\nauto c = Qsub(a, b);                           // \u5168\u90e8\u81ea\u52a8\u63a8\u5bfc\nauto d = Qsub&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;(a, b);  // \u4ec5\u4f7f\u7528\u57fa\u7840tag\nauto e = Qsub&lt;type1&gt;(a, b);                    // \u4f7f\u7528\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b\n</code></pre> <ul> <li>\u5141\u8bb8\u7684tag\u914d\u7f6e\u683c\u5f0f\u5305\u62ec\uff1a<ul> <li>\u4f20\u5165\u4efb\u610f\u6570\u91cf\u7684\u57fa\u7840tag\u5982<code>intBits&lt;&gt;</code>\u3001<code>fracBits&lt;&gt;</code>\u7b49\uff0c\u4e0d\u8db3\u65f6\u4f1a\u81ea\u52a8\u63a8\u5bfc\uff0c\u5c06\u540c\u65f6\u7528\u4e8e\u5b9e\u90e8\u548c\u865a\u90e8</li> <li>\u4f20\u5165\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b\uff0c\u5c06\u540c\u65f6\u7528\u4e8e\u5b9e\u90e8\u548c\u865a\u90e8</li> <li>\u8fde\u7eed\u4f20\u5165\u4e24\u4e2a\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b\uff0c\u7b2c\u4e00\u4e2a\u7528\u4e8e\u5b9e\u90e8\uff0c\u7b2c\u4e8c\u4e2a\u7528\u4e8e\u865a\u90e8</li> <li>\u4f7f\u7528<code>realT&lt;&gt;</code>\u548c<code>imagT&lt;&gt;</code>\u8fdb\u884c\u5b9e\u90e8\u548c\u865a\u90e8\u7684\u914d\u7f6e\u3002\u88ab\u5305\u88f9\u5728<code>realT&lt;&gt;</code>\u548c<code>imagT&lt;&gt;</code>\u4e2d\u7684tag\u5c06\u4f1a\u88ab\u7528\u4e8e\u5bf9\u5e94\u7684\u90e8\u5206\u3002</li> </ul> </li> </ul> <p>Example</p> <pre><code>using type1 = Qu&lt;&gt;;\nusing type2 = Qu&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;;\nusing complex_t = Qu&lt;type1, type2&gt;;\n\ncomplex_t a = {0.5, 0.5};\ntype1 b = 0.5;\ncomplex_t c = {0.5, 0.5};\n\nauto d = Qsub(a, b);                                 // \u5b9e\u90e8\u865a\u90e8\u90fd\u81ea\u52a8\u63a8\u5bfc\nauto e = Qsub&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;(a, c);        // \u5b9e\u90e8\u865a\u90e8\u90fd\u4f7f\u7528intBits&lt;3&gt;, fracBits&lt;4&gt;\nauto f = Qsub&lt;type1&gt;(a, c);                          // \u5b9e\u90e8\u865a\u90e8\u90fd\u4f7f\u7528type1\nauto g = Qsub&lt;type1, type2&gt;(a, c);                   // \u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u4f7f\u7528type2\nauto h = Qsub&lt;realT&lt;type1&gt;, imagT&lt;type2&gt;&gt;(a, c);     // \u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u4f7f\u7528type2\nauto i = Qsub&lt;realT&lt;type1&gt;&gt;(a, c);                   // \u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u81ea\u52a8\u63a8\u5bfc\nauto j = Qsub&lt;imagT&lt;fracBits&lt;5&gt;&gt;&gt;(a, c);             // \u5b9e\u90e8\u81ea\u52a8\u63a8\u5bfc\uff0c\u865a\u90e8\u4f7f\u7528fracBits&lt;5\n</code></pre> <p>\u5f53\u8f93\u5165\u4efb\u610f\u4e00\u4e2a\u8f93\u5165\u4e3a\u5f20\u91cf\u65f6\uff0c\u5c06\u4f1a\u6267\u884c\u9010\u5143\u7d20\u51cf\u6cd5\u3002\u6b64\u65f6\u4f20\u5165\u7684\u4efb\u610ftag\u5c06\u4f1a\u88ab\u5e7f\u64ad\u5230\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u51cf\u6cd5\u4e2d\u3002</p> <p>\u5141\u8bb8\u8f93\u5165\u60c5\u51b5\u4e3a\u4e24\u4e2a\u5c3a\u5bf8\u76f8\u540c\u7684\u5f20\u91cf\uff0c\u6216\u8005\u4e00\u4e2a\u6807\u91cf\u548c\u4e00\u4e2a\u5f20\u91cf\u3002</p> <p>Warning</p> <p>\u4e0d\u652f\u6301\u4e0d\u540c\u5c3a\u5bf8\u7684\u5f20\u91cf\u8fdb\u884c\u8ba1\u7b97\u3002\u5b8c\u6574\u7684\u5e7f\u64ad\u529f\u80fd\u6709\u5f85\u5b9e\u73b0\u3002</p> <p>Example</p> <pre><code>using type1 = Qu&lt;&gt;;\nusing type2 = Qu&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;;\nusing complex_t = Qu&lt;type1, type2&gt;;\nusing vec_t = Qu&lt;dim&lt;3&gt;, complex_t&gt;;\n\nvec_t a = {0.5, 0.5, 0.5};\ntype1 b = 0.5;\nvec_t c;\nc.fill();\n\nauto d = Qsub&lt;type1&gt; (a, b);                        // \u5e7f\u64adb\u5230a\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\nauto e = Qsub&lt;realT&lt;type1&gt;&gt;(a, b);                  // a\u548cc\u8fdb\u884c\u9010\u5143\u7d20\u51cf\u6cd5\uff0c\u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u81ea\u52a8\u63a8\u5bfc\nauto f = Qsub&lt;realT&lt;type1&gt;, imagT&lt;type2&gt;&gt;(a, c);    // a\u548cc\u8fdb\u884c\u9010\u5143\u7d20\u51cf\u6cd5\uff0c\u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u4f7f\u7528type2\nauto g = Qsub&lt;\n            BasicComplexMul&lt;\n                acT&lt;type1&gt;, bdT&lt;type2&gt;, adT&lt;type1&gt;, bcT&lt;type2&gt;, acbdT&lt;type1&gt;, adbcT&lt;type1&gt;\n                &gt;\n            &gt;(c, c);                                // c\u548cc\u8fdb\u884c\u9010\u5143\u7d20\u51cf\u6cd5\uff0c\u4f7f\u7528BasicComplexMul\u8fdb\u884c\u914d\u7f6e\n</code></pre>"},{"location":"APIs/Qu_operation/#qdivtqu-qu","title":"<code>Qdiv&lt;T...&gt;(Qu, Qu)</code>","text":"<p>Qu</p> <p>\u9664\u6cd5\u3002</p> <p>Warning</p> <ul> <li>\u7531\u4e8e\u9664\u6cd5\u7684\u7279\u6b8a\u6027\uff0c\u5728\u4f60\u4f7f\u7528\u9664\u6cd5\u524d\u8bf7\u786e\u4fdd\u4f60\u548c\u786c\u4ef6\u65b9\u9762\u7684\u4eba\u5458\u8ba8\u8bba\u8fc7\u3002</li> <li>\u5728\u51fa\u73b0\u9664\u4ee50\u7684\u60c5\u51b5\u65f6\uff0c\u5c06\u4f1a\u76f4\u63a5\u8fd4\u56de0\u3002</li> </ul> \u5b9e\u6570\u590d\u6570\u5f20\u91cf <ul> <li>\u5141\u8bb8\u7684tag\u914d\u7f6e\u683c\u5f0f\u5305\u62ec\uff1a<ol> <li>\u4f20\u5165\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b</li> <li>\u4f20\u5165\u4efb\u610f\u6570\u91cf\u7684\u57fa\u7840tag\u5982<code>intBits&lt;&gt;</code>\u3001<code>fracBits&lt;&gt;</code>\u7b49\uff0c\u4e0d\u8db3\u65f6\u4f1a\u81ea\u52a8\u63a8\u5bfc</li> </ol> </li> </ul> <p>Example</p> <pre><code>using type1 = Qu&lt;&gt;;\nusing type2 = Qu&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;;\n\ntype1 a = 0.5;\ntype2 b = 0.5;\n\nauto c = Qdiv(a, b);                           // \u5168\u90e8\u81ea\u52a8\u63a8\u5bfc\nauto d = Qdiv&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;(a, b);  // \u4ec5\u4f7f\u7528\u57fa\u7840tag\nauto e = Qdiv&lt;type1&gt;(a, b);                    // \u4f7f\u7528\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b\n</code></pre> <ul> <li>\u5141\u8bb8\u7684tag\u914d\u7f6e\u683c\u5f0f\u5305\u62ec\uff1a<ul> <li>\u4f20\u5165\u4efb\u610f\u6570\u91cf\u7684\u57fa\u7840tag\u5982<code>intBits&lt;&gt;</code>\u3001<code>fracBits&lt;&gt;</code>\u7b49\uff0c\u4e0d\u8db3\u65f6\u4f1a\u81ea\u52a8\u63a8\u5bfc\uff0c\u5c06\u540c\u65f6\u7528\u4e8e\u5b9e\u90e8\u548c\u865a\u90e8</li> <li>\u4f20\u5165\u4e00\u4e2a\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b\uff0c\u5c06\u540c\u65f6\u7528\u4e8e\u5b9e\u90e8\u548c\u865a\u90e8</li> <li>\u8fde\u7eed\u4f20\u5165\u4e24\u4e2a\u5b9a\u4e49\u597d\u7684Qu\u7c7b\u578b\uff0c\u7b2c\u4e00\u4e2a\u7528\u4e8e\u5b9e\u90e8\uff0c\u7b2c\u4e8c\u4e2a\u7528\u4e8e\u865a\u90e8</li> <li>\u4f7f\u7528<code>realT&lt;&gt;</code>\u548c<code>imagT&lt;&gt;</code>\u8fdb\u884c\u5b9e\u90e8\u548c\u865a\u90e8\u7684\u914d\u7f6e\u3002\u88ab\u5305\u88f9\u5728<code>realT&lt;&gt;</code>\u548c<code>imagT&lt;&gt;</code>\u4e2d\u7684tag\u5c06\u4f1a\u88ab\u7528\u4e8e\u5bf9\u5e94\u7684\u90e8\u5206\u3002</li> </ul> </li> </ul> <p>Warning</p> <p>\u9664\u6570\u4ec5\u652f\u6301\u5b9e\u6570\uff0c\u4e0d\u652f\u6301\u590d\u6570\u3002</p> <p>Example</p> <pre><code>using type1 = Qu&lt;&gt;;\nusing type2 = Qu&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;;\nusing complex_t = Qu&lt;type1, type2&gt;;\n\ncomplex_t a = {0.5, 0.5};\ntype1 b = 0.5;\n\nauto d = Qdiv(a, b);                                 // \u5b9e\u90e8\u865a\u90e8\u90fd\u81ea\u52a8\u63a8\u5bfc\nauto e = Qdiv&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;(a, b);        // \u5b9e\u90e8\u865a\u90e8\u90fd\u4f7f\u7528intBits&lt;3&gt;, fracBits&lt;4&gt;\nauto f = Qdiv&lt;type1&gt;(a, b);                          // \u5b9e\u90e8\u865a\u90e8\u90fd\u4f7f\u7528type1\nauto g = Qdiv&lt;type1, type2&gt;(a, b);                   // \u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u4f7f\u7528type2\nauto h = Qdiv&lt;realT&lt;type1&gt;, imagT&lt;type2&gt;&gt;(a, b);     // \u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u4f7f\u7528type2\nauto i = Qdiv&lt;realT&lt;type1&gt;&gt;(a, b);                   // \u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u81ea\u52a8\u63a8\u5bfc\nauto j = Qdiv&lt;imagT&lt;fracBits&lt;5&gt;&gt;&gt;(a, b);             // \u5b9e\u90e8\u81ea\u52a8\u63a8\u5bfc\uff0c\u865a\u90e8\u4f7f\u7528fracBits&lt;5&gt;\uff0c\u5176\u4f59\u81ea\u52a8\u63a8\u5bfc\n</code></pre> <p>\u5f53\u8f93\u5165\u4efb\u610f\u4e00\u4e2a\u8f93\u5165\u4e3a\u5f20\u91cf\u65f6\uff0c\u5c06\u4f1a\u6267\u884c\u9010\u5143\u7d20\u9664\u6cd5\u3002\u6b64\u65f6\u4f20\u5165\u7684\u4efb\u610ftag\u5c06\u4f1a\u88ab\u5e7f\u64ad\u5230\u6bcf\u4e00\u4e2a\u5143\u7d20\u7684\u9664\u6cd5\u4e2d\u3002</p> <p>\u5141\u8bb8\u8f93\u5165\u60c5\u51b5\u4e3a\u4e24\u4e2a\u5c3a\u5bf8\u76f8\u540c\u7684\u5f20\u91cf\uff0c\u6216\u8005\u4e00\u4e2a\u6807\u91cf\u548c\u4e00\u4e2a\u5f20\u91cf\u3002</p> <p>Warning</p> <p>\u4e0d\u652f\u6301\u4e0d\u540c\u5c3a\u5bf8\u7684\u5f20\u91cf\u8fdb\u884c\u8ba1\u7b97\u3002\u5b8c\u6574\u7684\u5e7f\u64ad\u529f\u80fd\u6709\u5f85\u5b9e\u73b0\u3002</p> <p>Example</p> <pre><code>using type1 = Qu&lt;&gt;;\nusing type2 = Qu&lt;intBits&lt;3&gt;, fracBits&lt;4&gt;&gt;;\nusing complex_t = Qu&lt;type1, type2&gt;;\nusing vec_t = Qu&lt;dim&lt;3&gt;, complex_t&gt;;\n\nvec_t a = {0.5, 0.5, 0.5};\ntype1 b = 0.5;\nvec_t c;\nc.fill();\n\nauto d = Qdiv&lt;type1&gt; (a, b);                        // \u5e7f\u64adb\u5230a\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\nauto e = Qdiv&lt;realT&lt;type1&gt;&gt;(a, b);                  // a\u548cc\u8fdb\u884c\u9010\u5143\u7d20\u9664\u6cd5\uff0c\u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u81ea\u52a8\u63a8\u5bfc\nauto f = Qdiv&lt;realT&lt;type1&gt;, imagT&lt;type2&gt;&gt;(a, c);    // a\u548cc\u8fdb\u884c\u9010\u5143\u7d20\u9664\u6cd5\uff0c\u5b9e\u90e8\u4f7f\u7528type1\uff0c\u865a\u90e8\u4f7f\u7528type2\nauto g = Qdiv&lt;\n            BasicComplexMul&lt;\n                acT&lt;type1&gt;, bdT&lt;type2&gt;, adT&lt;type1&gt;, bcT&lt;type2&gt;, acbdT&lt;type1&gt;, adbcT&lt;type1&gt;\n                &gt;\n            &gt;(c, c);                                // c\u548cc\u8fdb\u884c\u9010\u5143\u7d20\u9664\u6cd5\uff0c\u4f7f\u7528BasicComplexMul\u8fdb\u884c\u914d\u7f6e\n</code></pre>"},{"location":"APIs/Qu_operation/#qreducetqu","title":"<code>Qreduce&lt;T...&gt;(Qu)</code>","text":"<p>Qu</p> <p><code>Qreduce</code>\u7528\u4e8e\u7b97\u4e00\u4e2a\u5f20\u91cf\u7684\u6240\u6709\u5143\u7d20\u7684\u548c\u3002</p> <p>\u5b9e\u73b0\u7684\u65b9\u6cd5\u4e3a\u6811\u5f62\u52a0\u6cd5\u3002\u53ef\u4ee5\u4f20\u5165\u4efb\u610f\u6570\u91cf\u7684tag\uff0c\u7528\u4e8e\u914d\u7f6e\u6bcf\u4e00\u5c42\u7684\u52a0\u6cd5\u3002</p> \u5747\u5300\u52a0\u6cd5\u5206\u5c42\u914d\u7f6e\u6807\u91cf\u6c42\u548c <p>\u5982\u679c\u4ec5\u4f20\u5165\u4e00\u4e2a\u7c7b\u578b\uff0c\u5219\u5185\u90e8\u5168\u90e8\u4f7f\u7528\u8fd9\u4e2a\u7c7b\u578b\u8fdb\u884c\u52a0\u6cd5\u3002</p> <p>Example</p> <pre><code>using type = Qu&lt;&gt;;\nQu&lt;dim&lt;2, 2&gt;, type&gt; mat = {1, 2, 3, 4};\n\nauto sum = Qreduce&lt;type&gt;(mat);\n</code></pre> <p>\u53ef\u4ee5\u76f4\u63a5\u4f20\u5165\u591a\u4e2atype\uff0c\u6216\u8005\u4f20\u5165\u4e00\u4e2a<code>TypeList</code>\uff0c\u7528\u4e8e\u914d\u7f6e\u6bcf\u4e00\u5c42\u7684\u52a0\u6cd5\u3002</p> <p>Example</p> <pre><code>using type1 = Qu&lt;&gt;;\nusing type2 = Qu&lt;fracBits&lt;3&gt;&gt;;\n\nQu&lt;dim&lt;2, 2&gt;, type1&gt; mat = {1, 2, 3, 4};\n\nauto sum1 = Qreduce&lt;type1, type2&gt;(mat);\n\nusing typeList = TypeList&lt;type1, type2&gt;;\n\nauto sum2 = Qreduce&lt;typeList&gt;(mat);\n</code></pre> <p>\u53ef\u4ee5\u5728\u8f93\u5165\u4e2d\u4f20\u5165\u4efb\u610f\u6570\u91cf\u7684\u6807\u91cf<code>Qu</code>\uff0c\u7528\u4e8e\u6c42\u548c\u3002</p> <p>Example</p> <pre><code>Qu&lt;&gt; a = 1;\nQu&lt;&gt; b = 2;\nQu&lt;&gt; c = 3;\n\nauto sum = Qreduce(a, b, c);\n</code></pre> <p>Warning</p> <p>\u8fd9\u4e2a\u7248\u672c\u5b58\u5728\u4e00\u5b9a\u7684\u7f16\u8bd1\u6548\u7387\u95ee\u9898\uff0c\u4e0d\u5efa\u8bae\u5728\u5927\u89c4\u6a21\u573a\u666f\u4e0b\u4f7f\u7528\u3002</p>"},{"location":"APIs/Qu_operation/#qtabletqu","title":"<code>Qtable&lt;T&gt;(Qu)</code>","text":"<p>Qu</p> <p><code>Qtable</code>\u7528\u4e8e\u5b9e\u73b0\u67e5\u8868\u3002\u8fd9\u4e2a\u51fd\u6570\u9700\u8981\u4f7f\u7528<code>ANUS::Qtable</code>\u6765\u83b7\u53d6</p> <p>\u53ea\u80fd\u7528\u4e8e\u6807\u91cf\u3002\u5b9e\u9645\u7684\u5b9e\u73b0\u4e3a\u5bf9\u8f93\u5165\u7684<code>Qu</code>\u7684<code>toDouble()</code>\u7ed3\u679c\u8fdb\u884c\u67e5\u8868\uff0c\u518d\u91cf\u5316\u4e3a<code>Qu</code>\u3002</p> <p><code>T</code>\u4e3a\u4e00\u4e2a\u51fd\u6570\u3002<code>QuBLAS.h</code>\u4e2d\u9884\u8bbe\u4e86\u4e09\u4e2a\u51fd\u6570\uff0c\u5206\u522b\u4e3a<code>sqrtFunc</code>, <code>reciprocalFunc</code>, <code>rsqrtFunc</code>\uff0c\u5206\u522b\u5bf9\u5e94\u5f00\u65b9\u3001\u5012\u6570\u3001\u5012\u6570\u5f00\u65b9\u3002</p> <p>Example</p> <pre><code>Qu&lt;&gt; a = 0.5;\n\nauto b = Qtable&lt;sqrtFunc&gt;(a);\n\n// custom function\ninline static constexpr auto myFunc = [](double x) { return x * x; };\n\nauto c = Qtable&lt;myFunc&gt;(a);\n</code></pre>"},{"location":"APIs/Qu_operation/#fullprec","title":"<code>FullPrec</code>","text":"<p><code>FullPrec</code>\u662f\u4e00\u4e2a\u7279\u6b8a\u7684tag\uff0c\u7528\u4e8e\u4f20\u5165\u67d0\u4e2a\u8ba1\u7b97\u51fd\u6570\uff0c\u4f7f\u5f97\u8ba1\u7b97\u7ed3\u679c\u5f3a\u5236\u4f7f\u7528\u5168\u7cbe\u5ea6\u3002</p> <p>\u8fd9\u4e2atag\u53ef\u7528\u4e8e\u51e0\u4e4e\u6240\u6709\u8ba1\u7b97\u3002</p> <p>Warning</p> <p>\u5f88\u53ef\u80fd\u4f1a\u5bfc\u81f4\u9700\u8981\u7684\u603b\u6bd4\u7279\u8d85\u8fc731\uff0c\u8c28\u614e\u4f7f\u7528\u3002</p> <p>Example</p> <pre><code>Qu&lt;&gt; a = 0.5;\nQu&lt;&gt; b = 0.5;\n\nauto c = Qadd&lt;FullPrec&gt;(a, b);\n</code></pre>"},{"location":"APIs/Qu_property/","title":"Qu\u7684\u6210\u5458","text":"<p>Info</p> <p>\u6240\u6709\u7684<code>Qu</code>\u7684\u6210\u5458\u5168\u90e8\u4e3a\u516c\u6709\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u3002</p> \u5b9e\u6570\u6807\u91cf\u590d\u6570\u6807\u91cf\u5f20\u91cf <p>\u5927\u90e8\u5206\u6210\u5458\u548c\u5b9e\u6570\u6807\u91cf\u4e00\u6837\u3002</p>"},{"location":"APIs/Qu_property/#data","title":"<code>data</code>","text":"<p>int</p> <p>\u4ee532\u4f4d\u6574\u5f62\u5b9e\u9645\u5b58\u50a8\u7684\u6570\u636e\u3002</p> <p>Warning</p> <ul> <li>\u8bf7\u4e0d\u8981\u76f4\u63a5\u6298\u817e<code>data</code>\uff0c\u9664\u975e\u4f60\u77e5\u9053\u81ea\u5df1\u5728\u5e72\u4ec0\u4e48\u3002</li> <li>\u65e0\u8bba\u662f\u5426\u8981\u6c42\u4e86\u7b26\u53f7\u4f4d\uff0c<code>data</code>\u90fd\u662f\u6709\u7b26\u53f7\u7684\u3002</li> </ul>"},{"location":"APIs/Qu_property/#todouble","title":"<code>toDouble()</code>","text":"<p>double</p> <p>\u8fd4\u56de\u5b9e\u9645\u4ee3\u8868\u7684double\u503c\u3002</p> <p>Example</p> <p><pre><code>Qu&lt;intBits&lt;2&gt;, fracBits&lt;2&gt;, isSigned&lt;true&gt;&gt; a = 0.92;\nstd::cout &lt;&lt; a.toDouble() &lt;&lt; std::endl;\n</code></pre> \u8f93\u51fa\uff1a <pre><code>0.75\n</code></pre></p>"},{"location":"APIs/Qu_property/#tostring","title":"<code>toString()</code>","text":"<p>std::string</p> <p>\u8fd4\u56de\u6bd4\u7279\u4e32\u7684\u5b57\u7b26\u4e32\u8868\u793a\u3002</p>"},{"location":"APIs/Qu_property/#filldisint","title":"<code>fill(\u00b7dis\u00b7int)</code>","text":"<p>Qu</p> <p>\u5c06<code>Qu</code>\u586b\u5145\u4e3a\u6307\u5b9a\u7684\u503c\u3002\u5c06\u4f1a\u8fd4\u56de<code>*this</code>\uff0c\u4ee5\u4fbf\u94fe\u5f0f\u8c03\u7528\u3002</p> disint <p>\u65e0\u53c2\u6570\u65f6\uff0c\u5c06\u4f1a\u586b\u5145\u53ef\u80fd\u8303\u56f4\u5185\u7684\u968f\u673a\u5747\u5300\u5206\u5e03\u3002</p> <p>Example</p> <pre><code>Qu&lt;&gt; a;\na.fill();\n</code></pre> <p>\u53ef\u4ee5\u4f20\u5165\u4e00\u4e2a\u5206\u5e03\uff0c\u5c06\u4f1a\u586b\u5145\u4e3a\u5206\u5e03\u7684\u503c\u3002</p> <p><code>QuBLAS.h</code>\u4e2d\u9884\u8bbe\u4e86<code>UniRand</code>\u548c<code>NormRand</code>\u4e24\u4e2a\u5206\u5e03\u3002</p> <p>Example</p> <pre><code>Qu&lt;&gt; a;\na.fill(NormRand);\n\nQu&lt;&gt; b;\nb.fill(UniRand);\n\nQu&lt;&gt; c;\nstd::normal_distribution&lt;double&gt; myDis(1, 2);\nc.fill(myDis);\n</code></pre> <p>\u4f20\u5165\u4e00\u4e2a\u6574\u6570\uff0c\u5c06\u4f1a\u586b\u5145\u4e3a\u8fd9\u4e2a\u6574\u6570\u3002</p> <p>\u8fd9\u91cc\u63a8\u8350\u4f7f\u7528\u4e8c\u8fdb\u5236\u5b57\u9762\u91cf\uff0c\u53ef\u4ee5\u66f4\u76f4\u89c2\u7684\u770b\u5230\u586b\u5145\u7684\u503c\u3002</p> <p>Example</p> <p><pre><code>Qu&lt;&gt; a;\na.fill(0b1010);\na.display();\n</code></pre> \u8f93\u51fa\uff1a <pre><code>intBits: 8 fracBits: 8 isSigned: 1 Static\nBinary: 00000000000001010\nBinary 32: 00000000000000000000000000001010\nHex: a\nDecimal: 0.0390625\n</code></pre></p>"},{"location":"APIs/Qu_property/#display","title":"<code>display()</code>","text":"<p>\u6253\u5370debug\u4fe1\u606f\u3002</p> <p>Example</p> <p><pre><code>Qu&lt;intBits&lt;8&gt;, isSigned&lt;true&gt;&gt; a = 1;\na.display();\n</code></pre> \u8f93\u51fa\uff1a <pre><code>intBits: 8 fracBits: 12 isSigned: 1 Static\nBinary: 000000001000000000000\nBinary 32: 00000000000000000001000000000000\nHex: 1000\nDecimal: 1\n</code></pre></p>"},{"location":"APIs/Qu_property/#operator","title":"<code>operator &lt;&lt;</code>","text":"<p>ofstream</p> <p>\u91cd\u8f7d<code>&lt;&lt;</code>\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u8f93\u51fa\u5230\u6d41\u3002\u5c06\u4f1a\u8f93\u51fa\u5b9e\u9645\u4ee3\u8868\u7684toDouble()\u503c\u3002</p> <p>Example</p> <p><pre><code>Qu&lt;intBits&lt;2&gt;, fracBits&lt;2&gt;, isSigned&lt;true&gt;&gt; a = 0.92;\nstd::cout &lt;&lt; a &lt;&lt; std::endl;\n</code></pre> \u8f93\u51fa\uff1a <pre><code>0.75\n</code></pre></p>"},{"location":"APIs/Qu_property/#operator-any","title":"<code>operator = Any</code>","text":"<p>Qu</p> <p>\u91cd\u8f7d<code>=</code>\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u8d4b\u503c\u3002</p> <p>\u8fd9\u91cc\u7684Any\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\u503c\u7c7b\u578b\u3002</p> <p>\u53ef\u4ee5\u4eceQu\u8d4b\u503c\u7ed9Qu\uff0c\u4e5f\u53ef\u4ee5\u4ece\u4efb\u610f\u5b9e\u6570\u7c7b\u578b\u8d4b\u503c\u7ed9Qu\uff0c\u6bd4\u5982<code>int</code>\u3001<code>double</code>\u7b49\u3002</p> <p>\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6765\u81ea\u540c\u6837\u914d\u7f6e\u7684Qu\u65f6\u4f1a\u76f4\u63a5\u62f7\u8d1d<code>data</code>\uff0c\u800c\u6765\u81ea\u4e0d\u540c\u914d\u7f6e\u7684Qu\u65f6\u4f1a\u8fdb\u884c\u8f6c\u6362\uff0c\u6b64\u65f6\u5c06\u4f1a\u8fdb\u884c\u91cf\u5316\u548c\u6ea2\u51fa\u5224\u65ad\u3002</p> <p>Example</p> <pre><code>Qu&lt;intBits&lt;4&gt;, fracBits&lt;4&gt;, isSigned&lt;true&gt;&gt; a;\na = 0.92;\n\nQu&lt;intBits&lt;3&gt;, fracBits&lt;3&gt;, isSigned&lt;true&gt;&gt; b;\nb = a; // \u4f1a\u8fdb\u884c\u91cf\u5316\u548c\u6ea2\u51fa\u5224\u65ad\n</code></pre>"},{"location":"APIs/Qu_property/#real","title":"<code>real</code>","text":"<p>Qu</p> <p>\u5b9e\u90e8\u3002</p>"},{"location":"APIs/Qu_property/#imag","title":"<code>imag</code>","text":"<p>Qu</p> <p>\u865a\u90e8\u3002</p>"},{"location":"APIs/Qu_property/#filldisint_1","title":"<code>fill(disint)</code>","text":"<p>Qu</p> <p>\u5c06\u590d\u6570\u586b\u5145\u4e3a\u6307\u5b9a\u7684\u503c\u3002\u5c06\u4f1a\u5bf9\u5b9e\u90e8\u548c\u865a\u90e8\u5206\u522b\u8c03\u7528<code>fill()</code>\u3002</p>"},{"location":"APIs/Qu_property/#size","title":"<code>size</code>","text":"<p>dim&lt;N...&gt;</p> <p>\u5f20\u91cf\u7684\u5927\u5c0f\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u662f\u4e00\u4e2a<code>dim&lt;N...&gt;</code>\u7c7b\u578b\uff0c\u4e0d\u662f\u4e00\u4e2a\u503c\u3002</p>"},{"location":"APIs/Qu_property/#data_1","title":"<code>data</code>","text":"<p>std::array&lt;Qu, N&gt; </p> <p>\u4ee5<code>std::array</code>\u5b58\u50a8\u7684\u6570\u636e\u3002\u5176\u4e2d<code>N</code>\u4e3a\u5f20\u91cf\u7684\u5927\u5c0f\u3002\u53ef\u4ee5\u901a\u8fc7<code>size::elemSize</code>\u83b7\u53d6\u5143\u7d20\u4e2a\u6570\u3002</p>"},{"location":"APIs/Qu_property/#operator-size_t","title":"<code> operator [size_t ...]</code>","text":"<p>Qu</p> <p>\u91cd\u8f7d<code>[]</code>\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u8bbf\u95ee\u5f20\u91cf\u7684\u5143\u7d20\u3002</p> <p>\u5177\u6709\u4e24\u79cd\u91cd\u8f7d\u5f62\u5f0f\uff1a\u7d22\u5f15\u6570\u91cf\u7b49\u4e8e\u7ef4\u5ea6\uff0c\u6216\u8005\u7d22\u5f15\u4ec5\u4e3a\u4e00\u4e2a\u3002</p> size_t ...size_t <p>\u7d22\u5f15\u6570\u91cf\u7b49\u4e8e\u7ef4\u5ea6\u65f6\uff0c\u5c31\u662f\u53d6\u51fa\u5bf9\u5e94\u5750\u6807\u7684\u5143\u7d20\u3002</p> <p>Example</p> <pre><code>Qu&lt;dim&lt;2,2&gt;, Qu&lt;&gt;&gt; mat = {1, 2, 3, 4};\nstd::cout &lt;&lt; mat[0, 1] &lt;&lt; std::endl;\n</code></pre> <p>\u8f93\u51fa\uff1a <pre><code>2\n</code></pre></p> <p>\u7d22\u5f15\u6570\u91cf\u4e3a\u5355\u4e2a\u7d22\u5f15\u65f6\uff0c\u662f\u76f4\u63a5\u5bf9<code>data</code>\u8fdb\u884c\u7d22\u5f15\u3002</p> <p>\u8fd9\u7b49\u6548\u4e0e<code>data[index]</code>\u3002\u4e5f\u5c31\u662fMatlab\u4e2d\u7684\u5355\u7d22\u5f15\u64cd\u4f5c\u3002</p> <p>Example</p> <p><pre><code>Qu&lt;dim&lt;2,2&gt;, Qu&lt;&gt;&gt; mat = {1, 2, 3, 4};\nstd::cout &lt;&lt; mat[2] &lt;&lt; std::endl;\n</code></pre> \u8f93\u51fa\uff1a <pre><code>3\n</code></pre></p>"},{"location":"APIs/Qu_property/#display_1","title":"<code>display()</code>","text":"<p>\u6253\u5370debug\u4fe1\u606f\u3002\u6548\u679c\u4e3a\u5bf9\u6bcf\u4e2a\u5143\u7d20\u8c03\u7528<code>display()</code>\u3002</p>"},{"location":"APIs/Qu_property/#clear","title":"<code>clear()</code>","text":"<p>\u5c06\u5f20\u91cf\u6e05\u96f6\u3002</p>"},{"location":"APIs/Qu_property/#filldisint_2","title":"<code> fill(disint)</code>","text":"<p>Qu</p> <p>\u5c06\u5f20\u91cf\u586b\u5145\u4e3a\u6307\u5b9a\u7684\u503c\u3002</p> <p>\u548c\u5b9e\u6570\u6807\u91cf\u7684<code>fill()</code>\u4e00\u6837\uff0c\u53ea\u662f\u8fd9\u91cc\u662f\u5bf9\u6bcf\u4e2a\u5143\u7d20\u90fd\u8c03\u7528\u4e00\u6b21<code>fill()</code>\u3002</p>"},{"location":"APIs/Qu_property/#shuffle","title":"<code>shuffle()</code>","text":"<p>Qu</p> <p>\u5c06\u5f20\u91cf\u6253\u4e71\u3002\u5c06\u4f1a\u8fd4\u56de<code>*this</code>\uff0c\u4ee5\u4fbf\u94fe\u5f0f\u8c03\u7528\u3002</p>"},{"location":"APIs/Qu_property/#todouble_1","title":"<code>toDouble()</code>","text":"<p>std::array&lt;double, N&gt;</p> <p>\u8fd4\u56de\u4e00\u4e2a<code>std::array&lt;double, N&gt;</code>\uff0c\u5176\u4e2d<code>N</code>\u4e3a\u5f20\u91cf\u7684\u5927\u5c0f\u3002\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f\u5bf9\u5e94\u5143\u7d20\u7684<code>toDouble()</code>\u503c\u3002</p>"},{"location":"APIs/Qu_property/#operator-any_1","title":"<code>operator = Any</code>","text":"<p>Qu</p> <p>\u91cd\u8f7d<code>=</code>\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u4ece\u4efb\u4f55\u6765\u6e90\u8d4b\u503c\u3002</p> <p>\u8981\u6c42\u6765\u6e90\u662f\u4e00\u4e2a\u53ef\u4ee5\u88ab\u65b9\u62ec\u53f7\u7d22\u5f15\u7684\u7c7b\u578b\uff0c\u6bd4\u5982<code>std::array</code>\u3001<code>std::vector</code>\u6216\u8005\u53e6\u4e00\u4e2a<code>Qu</code>\u5f20\u91cf\u3002</p> <p>\u8fd0\u884c\u7684\u8fc7\u7a0b\u662f\u5bf9\u8303\u56f4\u4e3a<code>0 : size::elemSize</code>\u7684\u6bcf\u4e2a<code>i</code>\u8c03\u7528\u6765\u6e90\u7684<code>[i]</code>\u7d22\u5f15\uff0c\u7136\u540e\u8d4b\u503c\u7ed9\u5bf9\u5e94\u7684\u5143\u7d20\u3002</p> <p>Warning</p> <p>\u8bf7\u81ea\u884c\u786e\u4fdd\u6765\u6e90\u7684\u5927\u5c0f\u548c\u5f20\u91cf\u7684\u5927\u5c0f\u4e00\u81f4\uff0c\u4e0d\u4f1a\u8fdb\u884c\u68c0\u67e5\u3002</p> <p>Example</p> <pre><code>Qu&lt;dim&lt;2,2&gt;, Qu&lt;&gt;&gt; mat;\nstd::array&lt;double, 4&gt; arr = {1, 2, 3, 4};\nmat = arr;\n\nstd::vector&lt;double&gt; vec = {1, 2, 3, 4};\nmat = vec;\n\nmat = {1, 2, 3, 4};\n</code></pre>"},{"location":"APIs/Qu_property/#operator_1","title":"<code>operator &lt;&lt;</code>","text":"<p>ofstream</p> <p>\u91cd\u8f7d<code>&lt;&lt;</code>\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u8f93\u51fa\u5230\u6d41\u3002\u4e0d\u540c\u4e8e<code>toDouble()</code>\uff0c\u8fd9\u91cc\u7684\u6253\u5370\u4f1a\u5c3d\u53ef\u80fd\u5730\u4fdd\u6301\u4e00\u4e2a\u5de5\u6574\u7684\u683c\u5f0f\u3002</p> <p>Example</p> <p><pre><code>Qu&lt;dim&lt;2,2&gt;, Qu&lt;&gt;&gt; mat = {1, 2, 3, 4};\nstd::cout &lt;&lt; mat &lt;&lt; std::endl;\n</code></pre> \u8f93\u51fa\uff1a <pre><code>[1.0000, 3.0000\n 2.0000, 4.0000]\n</code></pre></p>"}]}